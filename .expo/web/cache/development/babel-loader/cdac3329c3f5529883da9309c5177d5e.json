{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\GitKraken\\\\Sloth\\\\App\\\\Screens\\\\Modal.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport styles from \"../Styles/styles\";\nvar listModal = [{\n  status: \"All\"\n}, {\n  status: \"Not all\"\n}];\nvar data = [{\n  name: \"A1\",\n  status: \"Green\"\n}, {\n  name: \"A2\",\n  status: \"Blue\"\n}, {\n  name: \"A3\",\n  status: \"Yellow\"\n}, {\n  name: \"A4\",\n  status: \"Green\"\n}, {\n  name: \"A5\",\n  status: \"Purple\"\n}];\n\nvar Modal = function Modal() {\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var setStatusFilter = function setStatusFilter(status) {\n    setStatus(status);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      key: index,\n      style: styles.itemRenderModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.itemLogo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.itemBody,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.itemName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, item.name)), React.createElement(View, {\n      style: [styles.itemStatus, {\n        backgroundColor: item.status === \"Purple\" ? \"#e5848e\" : \"#69c080\"\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, item.status)));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.listModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, listModal.map(function (e) {\n    return React.createElement(TouchableOpacity, {\n      style: [styles.buttonModal, status === e.status && styles.buttonModalActive],\n      onPress: function onPress() {\n        return setStatusFilter(e.status);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: [styles.textModal, status === e.status && styles.textModalActive],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, e.status));\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(e, i) {\n      return i.toString();\n    },\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Modal;","map":{"version":3,"sources":["D:/GitKraken/Sloth/App/Screens/Modal.js"],"names":["StatusBar","React","useState","FlatList","styles","listModal","status","data","name","Modal","setStatus","setStatusFilter","renderItem","item","index","itemRenderModal","itemLogo","itemBody","itemName","itemStatus","backgroundColor","container","map","e","buttonModal","buttonModalActive","textModal","textModalActive","i","toString"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport styles from \"../Styles/styles\";\r\n\r\nconst listModal = [\r\n  {\r\n    status: \"All\",\r\n  },\r\n  {\r\n    status: \"Not all\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    name: \"A1\",\r\n    status: \"Green\",\r\n  },\r\n  {\r\n    name: \"A2\",\r\n    status: \"Blue\",\r\n  },\r\n  {\r\n    name: \"A3\",\r\n    status: \"Yellow\",\r\n  },\r\n  {\r\n    name: \"A4\",\r\n    status: \"Green\",\r\n  },\r\n  {\r\n    name: \"A5\",\r\n    status: \"Purple\",\r\n  },\r\n];\r\n\r\nconst Modal = () => {\r\n  const [status, setStatus] = useState(\"All\");\r\n  const setStatusFilter = (status) => {\r\n    setStatus(status);\r\n  };\r\n\r\n  const renderItem = ({ item, index }) => {\r\n    return (\r\n      <View key={index} style={styles.itemRenderModal}>\r\n        <View style={styles.itemLogo}>\r\n          {/* <Image\r\n            style={styles.itemImage}\r\n            source={{uri:}}\r\n          /> */}\r\n        </View>\r\n\r\n        <View style={styles.itemBody}>\r\n          <Text style={styles.itemName}>{item.name}</Text>\r\n        </View>\r\n\r\n        <View\r\n          style={[\r\n            styles.itemStatus,\r\n            {\r\n              backgroundColor: item.status === \"Purple\" ? \"#e5848e\" : \"#69c080\",\r\n            },\r\n          ]}\r\n        >\r\n          <Text>{item.status}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.listModal}>\r\n        {listModal.map((e) => (\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.buttonModal,\r\n              status === e.status && styles.buttonModalActive,\r\n            ]}\r\n            onPress={() => setStatusFilter(e.status)}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.textModal,\r\n                status === e.status && styles.textModalActive,\r\n              ]}\r\n            >\r\n              {e.status}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(e, i) => i.toString()}\r\n        renderItem={renderItem}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}
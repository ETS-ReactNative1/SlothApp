{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\GitKraken\\\\Sloth\\\\App\\\\Screens\\\\Modal.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../Styles/styles\";\nvar listModal = [{\n  status: \"All\"\n}, {\n  status: \"Not all\"\n}];\n\nvar Modal = function Modal() {\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var setStatusFilter = function setStatusFilter(status) {\n    setStatus(status);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.listModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, listModal.map(function (e) {\n    return React.createElement(TouchableOpacity, {\n      style: [styles.buttonModal, status === e.status && styles.buttonModalActive],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"onPress=\", function () {\n      return setStatusFilter(e.status);\n    }, React.createElement(Text, {\n      style: styles.textModal,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, e.status));\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Modal;","map":{"version":3,"sources":["D:/GitKraken/Sloth/App/Screens/Modal.js"],"names":["StatusBar","React","useState","styles","listModal","status","Modal","setStatus","setStatusFilter","container","map","e","buttonModal","buttonModalActive","textModal"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAQA,OAAOC,MAAP;AAEA,IAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,MAAM,EAAE;AADV,CADgB,EAIhB;AACEA,EAAAA,MAAM,EAAE;AADV,CAJgB,CAAlB;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,kBAA4BJ,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeE,SAAf;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,MAAD,EAAY;AAClCE,IAAAA,SAAS,CAACF,MAAD,CAAT;AACD,GAFD;;AAIA,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,MAAM,CAACM,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACM,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAE,CACLR,MAAM,CAACS,WADF,EAELP,MAAM,KAAKM,CAAC,CAACN,MAAb,IAAuBF,MAAM,CAACU,iBAFzB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMW;AAAA,aAAML,eAAe,CAACG,CAAC,CAACN,MAAH,CAArB;AAAA,KANX,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCH,CAAC,CAACN,MAAlC,CAPF,CADa;AAAA,GAAd,CADH,CADF,EAcE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CAxBD;;AA0BA,eAAeC,KAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport styles from \"../Styles/styles\";\r\n\r\nconst listModal = [\r\n  {\r\n    status: \"All\",\r\n  },\r\n  {\r\n    status: \"Not all\",\r\n  },\r\n];\r\nconst Modal = () => {\r\n  const [status, setStatus] = useState(\"All\");\r\n  const setStatusFilter = (status) => {\r\n    setStatus(status);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.listModal}>\r\n        {listModal.map((e) => (\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.buttonModal,\r\n              status === e.status && styles.buttonModalActive,\r\n            ]}\r\n          >\r\n            onPress={() => setStatusFilter(e.status)}\r\n            <Text style={styles.textModal}>{e.status}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}